<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN"
    "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>
	<!-- ========================= VIEW DEFINITIONS ========================= -->
	<!-- 
		Der viewResolver sagt an, welche Ausgabe gerendert werden soll

		Wenn ich also bei formview/successview zb "commentAdded" angebe, 
		wird nach /commentAdded.jsp gesucht um den View zu rendern!

		Roland; 22. August 2005
	-->
	 <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver"> 
		<property name="viewClass"> 
			<value>org.springframework.web.servlet.view.JstlView</value> 
		</property> 
		
		<!--  If you need to move your JSPs to  /WEB-INF/pages,  all you ll need to change is the prefix. -->
		<property name="prefix">
			<value>/</value>
		</property> 
		
		<property name="suffix">
			<value>.jsp</value>
		</property> 
	</bean>
		
	<!-- which means look for messages.properties at the root of the classpath. S. 99 -->
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource"> 
		<property name="basename">
			<value>messages</value>
		</property> 
	</bean>

	<!-- To handle Multiple Methods in one Controller
		 Roland 26. August 2005
		http://…/dostuff.htm?action=methodname
	-->
	<bean id="methodNameResolver" class="org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver">
		<property name="paramName">
			<value>action</value>
		</property>
	</bean>
	
	<bean id="validatorFactory" class="org.springframework.validation.commons.DefaultValidatorFactory" init-method="init"> 
		<property name="resources"> 
			<list> 
				<value>/WEB-INF/validator-rules.xml</value> 
				<value>/WEB-INF/validation.xml</value> 
			</list> 
		</property> 
	</bean> 
	
	<bean id="beanValidator" class="org.springframework.validation.commons.BeanValidator"> 
		<property name="validatorFactory"> 
			<ref local="validatorFactory"/> 
		</property> 
	</bean>
	
	<!-- ========================= DEFINITIONS OF PUBLIC CONTROLLERS ========================= -->
	<!--
		Hier benutzen wir BeanNameUrlHandlerMapping; die Beans werden also genauso benannt, 
		wie die URL für die sie zuständig sind
	-->
	<bean id="defaultHandlerMapping" class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"/>
	
	<bean name="/login.html" class="at.newsagg.web.LoginFormController"> 
		<property name="commandName">
			<value>login</value>
		</property> 
		<property name="commandClass"> 
			<value>at.newsagg.model.User</value> 
		</property> 
		<property name="formView">
			<value>index</value>
		</property> 
		<property name="successView">
			<value>main.html</value>
		</property> 
		<property name="userManager">
			<ref bean="userManager"/>
		</property> 		
	</bean>
	
	<bean name="/index.html" class="at.newsagg.web.IndexViewController"/>
	
	<bean name="/register.html" class="at.newsagg.web.RegisterController"> 
		<!--  optional - if you don't define it then the default name is command -->
		<property name="commandName">
			<value>user</value>
		</property> 
		<property name="commandClass"> 
			<value>at.newsagg.web.commandObj.RegisterCommand</value> 
		</property> 
		<property name="formView">
			<value>registerForm</value>
		</property> 
		<property name="successView">
			<value>userHasBeenAdded</value>
		</property> 
		<property name="userManager">
			<ref bean="userManager"/>
		</property> 
		<!-- property name="validator">
			<ref bean="beanValidator"/>
		</property-->
	</bean>




		
	<!-- ========================= DEFINITIONS OF PROTECTED CONTROLLERS ========================= -->




 <!--
	Hier benutzen wir SimpleUrlHandlerMapping anstelle von BeanNameUrlHandlerMapping.

	Vorteil: ??

	Roland Vecera; August 2005
	-->
  <bean id="urlMapping"     
     class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">    
       <property name="interceptors">
         <list>
			<!-- Interceptor für Lacy Loading im View -->
              <ref bean="openSessionInViewInterceptor"/>
			<!-- 
				Interceptor, sodaß auf alle diese Seiten nur eingeloggte User dürfen!
				Roland Vecera; August 2005
			-->
              <ref bean="loginInterceptor"/> 
			  <ref bean="menuLoadInterceptor"/>
         </list>
       </property>
       <property name="mappings">
		<props>
			<prop key="/ajaxtest.html">AjaxTest</prop>
			<prop key="/storeViewInSession.html">StoreViewInSession</prop>
			<prop key="/storeOpenElements.html">StoreOpenElementsInSession</prop>
			<prop key="/autocompleteFeed.html">AutoCompleteURL</prop>
			<prop key="/readFeedItem.html">ReadFeedItem</prop>
			
			<prop key="/logout.html">Logout</prop>			

			<prop key="/moveFeedAjax.html">MoveFeedAjax</prop>
			<prop key="/moveFeed.html">MoveFeed</prop>
			
			<prop key="/deleteFeed.html">DeleteFeed</prop>

            <prop key="/subscribeChannel.html">SubscribeChannel</prop>
			<prop key="/addChannel.html">AddChannel</prop>

			<prop key="/addCategory.html">AddCategory</prop>
			<prop key="/removeCategory.html">RemoveCategory</prop>
			
			<prop key="/addComment.html">AddCommentView</prop>
            <prop key="/addCommentStore.html">AddComment</prop>
			<!-- http://localhost:8080/springbreak//showCommentsToChannel.html?id=7 -->
            <prop key="/showCommentsToChannel.html">ShowCommentsToChannel</prop>
			<prop key="/main.html">mainController</prop> 
			<prop key="/showUser.html">userController</prop> 
			<prop key="/showAddUser.html">userFormController</prop>
            <prop key="/showChannels.html">viewChannelsController</prop> 
			<!-- so: http://localhost:8080/springbreak/showSubscribersStatistic.html?channel_id=7&numberWeeks=30 -->
            <prop key="/showSubscribersStatistic.html">SubscribersStatisticController</prop>
		
		</props>
	   </property>
  </bean>

<!-- ************* INTERCEPTORS *********************** -->
	<bean id="loginInterceptor" class="at.newsagg.web.interceptor.LoginInterceptor"/>
	
	<bean id="menuLoadInterceptor" class="at.newsagg.web.interceptor.MenuLoadInterceptor">
		<property name="feedSubscriberDAO">
			<ref bean="feedSubscriberDAO" />
		</property>
	</bean>
<!-- ************* /INTERCEPTORS ********************** -->	
	<bean id="mainController" class="at.newsagg.web.MainController">
			<property name="feedSubscriberDAO">
				<ref bean="feedSubscriberDAO"/>
			</property>
			<property name="itemDAO">
				<ref bean="itemDAO"/>
			</property>


			<property name="HOTTEST">
				<value>50</value>
			</property>	

	</bean>


<bean id="AjaxTest" class="org.springframework.web.servlet.mvc.ServletWrappingController">
   <property name="servletClass">
     <value>at.newsagg.web.ajax.AjaxTest</value>
   </property>
   <property name="servletName">
     <value>ajaxTest</value>
   </property>
 </bean>

<bean id="StoreOpenElementsInSession" class="org.springframework.web.servlet.mvc.ServletWrappingController">
   <property name="servletClass">
     <value>at.newsagg.web.ajax.StoreOpenElementsInSession</value>
   </property>
   <property name="servletName">
     <value>storeOpenElementsInSession</value>
   </property>
 </bean>

<bean id="StoreViewInSession" class="org.springframework.web.servlet.mvc.ServletWrappingController">
   <property name="servletClass">
     <value>at.newsagg.web.ajax.StoreViewInSession</value>
   </property>
   <property name="servletName">
     <value>storeViewInSession</value>
   </property>
 </bean>



<bean id="MoveFeedAjax" class="at.newsagg.web.ajax.MoveFeedServletWrapper">
   <property name="servletClass">
     <value>at.newsagg.web.ajax.MoveFeed</value>
   </property>
   <property name="servletName">
     <value>moveFeed</value>
   </property>
    <property name="feedSubscriberDAO">
			<ref bean="feedSubscriberDAO"/>
	</property> 
	<property name="categoryDAO">
			<ref bean="categoryDAO"/>
	</property> 
 </bean>

<bean id="AutoCompleteURL" class="at.newsagg.web.ajax.AutoCompleteURLServletWrappingController">
   <property name="servletClass">
     <value>at.newsagg.web.ajax.AutoCompleteURL</value>
   </property>
   <property name="servletName">
     <value>AutoCompleteURL</value>
   </property>
	 <property name="channelDAO">
			<ref bean="channelDAO"/>
	</property> 
 </bean>






<bean id="ReadFeedItem" class="at.newsagg.web.ajax.ReadFeedItemServletWrapper">
   <property name="servletClass">
     <value>at.newsagg.web.ajax.ReadFeedItem</value>
   </property>
   <property name="servletName">
     <value>ReadFeedItem</value>
   </property> 
 	<property name="itemDAO">
			<ref bean="itemDAO"/>
	</property> 
 </bean>




	
	<bean id="showAddController" class="at.newsagg.web.ShowAddController"/>
	
	<bean id="userController" class="at.newsagg.web.UserController"> 
		<property name="userManager"> 
			<ref bean="userManager"/> 
		</property> 
	</bean> 

    <bean id="viewChannelsController" class="at.newsagg.web.feed.ViewChannelsController">
      <property name="channelDAO">
			<ref bean="channelDAO"/>
		</property>
   </bean>
	
	<bean id="userFormController" class="at.newsagg.web.UserFormController"> 
		<!--  optional - if you don't define it then the default name is command -->
		<property name="commandName">
			<value>user</value>
		</property> 
		<property name="commandClass"> 
			<value>at.newsagg.web.commandObj.UserFormCommand</value> 
		</property> 
		<property name="formView">
			<value>userForm</value>
		</property> 
		<property name="successView">
			<value>showUser.html</value>
		</property> 
		<property name="userManager">
			<ref bean="userManager"/>
		</property> 
		<!-- property name="validator">
			<ref bean="beanValidator"/>
		</property-->
	</bean>
<!-- Roland Vecera
30.4.2005
Statistic Controller -->
<bean id="SubscribersStatisticController" class="at.newsagg.web.statistics.SubscribersStatisticController">
 <property name="subscriberStatisticData">
			<ref bean="subscriberStatisticData"/>
		</property> 
 <property name="postingsStatisticData">
			<ref bean="postingsStatisticData"/>
		</property> 
 <property name="channelDAO">
	<ref bean="channelDAO" />
 </property>
</bean>


<!-- Roland Vecera
  30.3.2005

 Feed related Definitions

-->
<bean name="AddChannel" class="at.newsagg.web.feed.AddChannelController"> 
		<!--  optional - if you don't define it then the default name is command -->
		<property name="commandName">
			<value>channel</value>
		</property> 
		<property name="commandClass"> 
			<value>at.newsagg.model.parser.hibernate.Channel</value> 
		</property> 
		<property name="formView">
			<value>addFeedForm</value>
		</property> 
		<property name="successView">
			<value>feedAdded</value>
		</property> 
		<property name="parserService">
			<ref bean="parserCronJobService"/>
		</property> 
        <property name="userManager">
			<ref bean="userManager"/>
		</property>
        <property name="userDAO">
			<ref bean="userDAO"/>
		</property>
		<property name="channelDAO">
			<ref bean="channelDAO"/>
		</property>
		 <property name="validator">
			<ref bean="AddChannelValidator"/>
		</property>
</bean>

<bean name="MoveFeed" class="at.newsagg.web.feed.MoveFeedController"> 
		<property name="methodNameResolver">
			<ref bean="methodNameResolver"/>
		</property>
		<property name="feedSubscriberDAO">
			<ref bean ="feedSubscriberDAO" />
		</property>
		<property name="categoryDAO">
			<ref bean ="categoryDAO" />
		</property>
		<!-- property name="validator">
			<ref bean="beanValidator"/>
		</property-->
</bean>
 

<bean name="DeleteFeed" class="at.newsagg.web.feed.DeleteFeedController"> 
		<property name="methodNameResolver">
			<ref bean="methodNameResolver"/>
		</property>
		<property name="feedSubscriberDAO">
			<ref bean ="feedSubscriberDAO" />
		</property>
		<property name="categoryDAO">
			<ref bean ="categoryDAO" />
		</property>
		<!-- property name="validator">
			<ref bean="beanValidator"/>
		</property-->
</bean>



<bean name="RemoveCategory" class="at.newsagg.web.feed.DeleteCategoryController"> 
		<property name="methodNameResolver">
			<ref bean="methodNameResolver"/>
		</property>
		<property name="categoryDAO">
			<ref bean ="categoryDAO" />
		</property>
		<!-- property name="validator">
			<ref bean="beanValidator"/>
		</property-->
</bean>





<bean name="SubscribeChannel" class="at.newsagg.web.feed.SubscribeChannelController"> 
		<!--  optional - if you don't define it then the default name is command -->
		<property name="commandName">
			<value>command</value>
		</property> 
		<property name="commandClass"> 
			<value>at.newsagg.web.commandObj.feed.SubscribeChannelCommand</value> 
		</property> 
		<property name="formView">
			<value>feedAdded</value>
		</property> 
		<property name="successView">
			<value>redirect:successSubscribe</value>
		</property> 
        <property name="userDAO">
			<ref bean="userDAO"/>
		</property>
 		<property name="channelDAO">
			<ref bean="channelDAO"/>
		</property>
		<property name="categoryDAO">
			<ref bean="categoryDAO"/>
		</property>
        <property name="feedSubscriberDAO">
			<ref bean="feedSubscriberDAO"/>
		</property>
		<!-- property name="validator">
			<ref bean="beanValidator"/>
		</property-->
</bean>


<bean name="ShowCommentsToChannel" class="at.newsagg.web.feed.ViewCommentsToChannelController"> 
 		<property name="channelDAO">
			<ref bean="channelDAO"/>
		</property>
		<property name="commentDAO">
			<ref bean="commentDAO"/>
		</property>
		<!-- property name="validator">
			<ref bean="beanValidator"/>
		</property-->
</bean>





<bean name="AddComment" class="at.newsagg.web.feed.AddCommentController"> 
		<!--  optional - if you don't define it then the default name is command -->
		<property name="commandName">
			<value>comment</value>
		</property> 
		<property name="commandClass"> 
			<value>at.newsagg.model.Comment</value> 
		</property> 
		<property name="formView">
			<value>addCommentForm</value>
		</property> 
		<property name="successView">
			<value>commentAdded</value>
		</property> 
        <property name="commentDAO">
			<ref bean="commentDAO"/>
		</property>
		<property name="validator">
			<ref bean="AddCommentValidator"/>
		</property>
</bean>

<bean name="AddCommentView" class="at.newsagg.web.feed.AddCommentViewController"> 
</bean>


<bean name="AddCategory" class="at.newsagg.web.feed.AddCategoryController"> 
		<!--  optional - if you don't define it then the default name is command -->
		<property name="commandName">
			<value>category</value>
		</property> 
		<property name="commandClass"> 
			<value>at.newsagg.web.commandObj.feed.AddCategoryCommand</value> 
		</property> 
		<property name="formView">
			<value>addCategoryForm</value>
		</property> 
		<property name="successView">
			<value>main</value>
		</property> 
        <property name="categoryDAO">
			<ref bean="categoryDAO"/>
		</property>
		<property name="validator">
			<ref bean="AddCategoryValidator"/>
		</property>
</bean>

<bean name="Logout" class="at.newsagg.web.IndexViewController"/>


<!-- =========================== For Hibernate "Open Session in View" ===================================== -->	
<!-- for lazy loading of hibernate in View-Component 
     this bean is needed! see http://www.jroller.com/comments/kbaum/Weblog/orm_lazy_initialization_with_dao
	
	 ging aber nicht; Variante unterhalb gleichwertig!

  <bean name="openSessionInViewInterceptor"  
    class="org.springframework.orm.hibernate.support.OpenSessionInViewInterceptor">
       <property name="sessionFactory"><ref bean="sessionFactory"/></property>
  </bean> -->


<!-- Roland Vecera
     Interceptor for Open Session in View Lazy Loading Pattern
-->
 <bean name="openSessionInViewInterceptor"  
    class="org.springframework.orm.hibernate.support.OpenSessionInViewInterceptor">
       <property name="sessionFactory"><ref bean="sessionFactory"/></property>
  </bean>
	
		<!-- ========================= EXCEPTION HANDLING ========================= -->
	<bean id="AddChannelValidator" class="at.newsagg.web.validator.AddChannelValidator" />
	<bean id="AddCategoryValidator" class="at.newsagg.web.validator.AddCategoryValidator" />
	<bean id="AddCommentValidator" class="at.newsagg.web.validator.AddCommentValidator" />


	<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver"> 
			<property name="exceptionMappings"> 
				<props> 
					<prop key="org.springframework.dao.DataAccessException">dataAccessFailure</prop> 
					<prop key="org.springframework.orm.ObjectRetrievalFailureException">dataAccessFailure</prop> 
				</props> 
			</property> 
	</bean>



	
</beans>