<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN"
    "http://www.springframework.org/dtd/spring-beans.dtd">

<!-- this file was extracted from applicationContext.xml to speedup unittests
     
     however this file is needed for full functionality of the application
-->
     
<beans>

<!-- TODO: hat das jetzt dann kein Transaktionmngmnt?! -->
<!-- Task Timer for parserCronJobService -->
	<bean id="scheduledParserCronJob"
		class="org.springframework.scheduling.timer.ScheduledTimerTask">
		<property name="timerTask">
			<ref bean="parserCronJobServiceTarget"/>
		</property>
		<property name="period">
			<!-- time in ms -->
			<value>${app.timers.parseFeedsPeriodeInMs}</value>
		</property>
	</bean>


<!-- Master of all Timer Tasks; takes an array of Tasks to handle
 Add your Timertask here!
 Roland Vecera
-->
	<bean class="org.springframework.scheduling.timer.TimerFactoryBean">
		<property name="scheduledTimerTasks">
			<list>
				<ref bean="scheduledParserCronJob"/>
			</list>
		</property>
	</bean>

<!--  Alternative QUARZ-Timers; 
Sollte mächtiger und einfacher in der Definition sein

-->
<!-- Quartz Scheduler, with pre-registered triggers --> 
   <!-- Will automatically start scheduling on context startup --> 
   <bean id="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean"> 
      <property name="triggers"> 
         <list> 
            <ref local="logTrigger"/>
            <ref local="logTrigger_lucene"/>   
         </list> 
      </property> 
   </bean>

<bean id="logTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean"> 
	<property name="jobDetail"> 
			<ref local="courseServiceInvokingJobDetail"/> 
	</property> 
	
	<property name="cronExpression">
	      <value>${app.timers.StatisticsCronjob}</value>
	</property> 
</bean>

<!-- 
		A cron expression has at least 6 (and optionally 7) time elements, separated by spaces. 
		Each of these elements can be specified with an explicit value (e.g., 6), a range 
		(e.g., 9–12), a list (e.g., 9,11,13), or a wildcard (e.g., *). The day of the month and
		day of the week elements are mutually exclusive, so you should also indicate 
		which one of these fields you don’t want to set by specifying it with a question 
			mark (?).
			 
			 Seconds (0–59) Minutes (0–59) Hours (0–23) Day of month (1–31) 
		     Month (1–12 or JAN–DEC) Day of week (1–7 or SUN–SAT) Year (1970–2099)  -->

<bean id="logTrigger_lucene" class="org.springframework.scheduling.quartz.CronTriggerBean"> 
	<property name="jobDetail"> 
			<ref local="timerLuceneIndizierung"/> 
	</property> 
	

	<property name="cronExpression">
	      <value>${app.timers.IndexingCronjob}</value>
	</property> 
</bean>



<bean id="courseServiceInvokingJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
	<property name="targetObject">
		<ref bean="LogStatisticsCronJobService"/>
	</property>
	<property name="targetMethod">
		<value>runStatistics</value>
	</property>
</bean>

<bean id="timerLuceneIndizierung" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
	<property name="targetObject">
		<ref bean="IndexFeedsCronJobService"/>
	</property>
	<property name="targetMethod">
		<value>indexFeeds</value>
	</property>
</bean>

<bean id="LogStatisticsCronJobService" class="at.newsagg.service.impl.LogStatisticsCronJobServiceImpl">
	<property name="channelDAO"><ref bean="channelDAO"/></property>
	<property name="feedSubscriberDAO"><ref bean="feedSubscriberDAO"/></property>
	<property name="logDAO"><ref bean="logDAO"/></property>
</bean>

<bean id="IndexFeedsCronJobService" class="at.newsagg.service.impl.IndexFeedsImpl">
	<property name="rssDbIndexer">
 		<ref bean="rssIndexer"/>
 	</property>
</bean>

<!-- ============================== PropertyPlaceholderConfigurer ======================
     der PropertyPlaceholder wird von applicationContext.xml vererbt!! weil in web.xml im gleichen
	contextConfigLocation definiert! -->
	
</beans>